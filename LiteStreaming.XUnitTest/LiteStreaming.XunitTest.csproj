<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <IsPackable>false</IsPackable>
    <IsTestProject>true</IsTestProject>
  </PropertyGroup>

  <ItemGroup>
    <None Remove="appsettings.Development.json" />
    <None Remove="appsettings.json" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="appsettings.Development.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </Content>
    <Content Include="appsettings.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Bogus" Version="35.5.1" />
    <PackageReference Include="coverlet.msbuild" Version="6.0.2">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.EntityFrameworkCore.InMemory" Version="8.0.4" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="8.0.4">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="17.9.0" />
    <PackageReference Include="Moq" Version="4.20.69" />
    <PackageReference Include="MoqProtectedLike" Version="2.0.1" />
    <PackageReference Include="xunit" Version="2.8.0" />
    <PackageReference Include="xunit.runner.visualstudio" Version="2.8.0">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="coverlet.collector" Version="6.0.2">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\LiteStreaming.AdministrativeApp\LiteStreaming.AdministrativeApp.csproj" />
    <ProjectReference Include="..\LiteStreaming.Application\LiteStreaming.Application.csproj" />
    <ProjectReference Include="..\LiteStreaming.Domain\LiteStreaming.Domain.csproj" />
    <ProjectReference Include="..\LiteStreaming.Repository\LiteStreaming.Repository.csproj" />
    <ProjectReference Include="..\LiteStreaming.WebApi\LiteStreaming.WebApi.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="AdministrativeApp\Models\" />
    <Folder Include="AdministrativeApp\Views\" />
  </ItemGroup>

  <PropertyGroup>
    <TestDependsOn>
      AfterTest;
    </TestDependsOn>
  </PropertyGroup>

  <Target Name="Test" BeforeTargets="Build;Rebuild" DependsOnTargets="$(TestDependsOn)" />
  <Target Name="AfterTest">
    <!-- Check if OS is Windows -->
	  <Exec Condition=" '$(Configuration)' != 'Debug' And '$(OS)' == 'Windows_NT'" Command="powershell -File ./coverage_report.ps1" />
	  <!-- Check if OS is Linux Base 
    <Exec Condition="'$(OS)' != 'Windows_NT'" Command="bash ./coverage_report.sh" /> 
    -->
  </Target>

</Project>
