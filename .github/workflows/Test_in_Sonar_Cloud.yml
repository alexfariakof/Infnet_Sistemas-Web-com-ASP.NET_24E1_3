name: Test and Analysis Code In Sonar Cloud
on:
  workflow_call:

  push:
    branches: 
      - hotfix/*
      - feature/*
      - bugfix/*  

  pull_request:
    types: [opened, synchronize, reopened]
    branches:       
      - hotfix/*
      - feature/*
      - bugfix/*  

permissions:
    contents: read 
jobs:
  test_code_in_sonar_net:
    name: Test Code in Sonar Cloud
    runs-on: windows-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'
      
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache SonarCloud packages
        id: cache-sonar
        uses: actions/cache@v3        
        with:        
            path: ~\sonar\cache
            key: ${{ runner.os }}-sonar
            restore-keys: ${{ runner.os }}-sonar
      
      - name: Create if not Exist Cache Sonar Packages
        if: steps.cache-sonar.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path ~\sonar\cache -ItemType Directory    
        
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
            path: .\.sonar\scanner
            key: ${{ runner.os }}-sonar-scanner
            restore-keys: ${{ runner.os }}-sonar-scanner      
          
      
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path ./.sonar/scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner
    
      - name: Build and analyze
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |                    
          ./.sonar/scanner/dotnet-sonarscanner begin /k:"alexfariakof_Infnet_Sistemas-Web-com-ASP.NET_24E1_3" /o:"alexfariakof" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.exclusions="**/Migrations.*/**, **/DataSeeders/**, **/.documents/**, **/Program.cs, **/*.spec.ts, **/main.ts, **/environment.*, **/*.routing.module.ts, **/*.js, **/test.ts, **/*Test.cs, **/*.cshtml"  /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml" /d:sonar.cs.lcov.reportPaths="**/TestResults/coveragereport/lcov.info" /d:sonar.typescript.opencover.reportsPaths="**/coverage/angular-app/clover.xml" /d:sonar.typescript.lcov.reportPaths="**/coverage/angular-app/lcov.info"          
          
          dotnet tool install -g dotnet-reportgenerator-globaltool
          # Executa Build/Restore das  configura��es do projeto executando automaticamente a gera��o do report Genetator do Backend e Frontend
          dotnet test ./XunitTest/XunitTest.csproj --configuration Release /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura --collect:"XPlat Code Coverage;Format=opencover"
          
          ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
  
